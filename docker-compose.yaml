version: '3.8'

services:
  # PostgreSQL для базы данных
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Memcached для кэша
  memcached:
    image: memcached:alpine
    ports:
      - "11211:11211"

  # Redis для хранения геолокаций
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  # Zookeeper для управления Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  # Kafka для обработки сообщений
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # Kafka Init: создание топика при старте
  kafka-init:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    command: |
      bash -c "echo 'Waiting for Kafka to be ready...' && \
      cub kafka-ready -b kafka:9092 1 20 && \
      kafka-topics --create --topic geo-match-search --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1"

  # Приложение
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      MEMCACHE_HOST: memcached
      MEMCACHE_PORT: 11211
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - memcached
      - redis
      - kafka
    ports:
      - "8080:8080"

volumes:
  postgres_data:
